name: CI pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches: [ main ]
jobs:
  build:
    name: Build and Analyze
    runs-on: [ ubuntu-latest ]
    env:
      DB_URL: 'jdbc:postgresql://localhost:5432/mentality_test'
      DB_USERNAME: admin
      DB_PASSWORD: pass
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    services:
      postgres:
        image: 'postgres:latest'
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: mentality_test
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=MinoUni_tc-mentality
